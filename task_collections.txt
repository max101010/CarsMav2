|first name|last name|age|sex|
|Ivan|Ivanou|18|male|
|Olga|Ivanova|5|female|
|Sergey|Vasiliev|48|male|
|Katja|Novikava|5|female|

1. Получить все значения в коллекцию, где данные будут доступны по рядам таблицы, а значения для конкретного ряда по ключу - имени колонки
2. Результат первого задания отфильтровать, результатом будет такая же коллекция, только с колонками first name и age
3. Первое задание, только изначально получаем значения только для выбранных колонок
4. Из результатов первого задания получить коллекцию, содержащую только только имена колонок
5. Результат первого задания отсортировать по first name
6. Преобразовать произвольный массив строк в лист
7. Создать объект Man, с полями id, name, age, sex. Создать список этих объектов. Преобразовать в коллекцию, которая будет содержать строковое представление со значениями id и name.
8. Есть две коллекции List<Map<String, List<String>>> с разным содержанием. Сравните их
9. Сравние, что коллекция List<Map<String, List<String>>> содержит значения из List<List<String>>
10. Получить из коллекции List<Map<String, String>> коллекцию, где будут извлеченные значения из мапы по заданному клучу
11. Преобразовать все значения из List<String> в List<Double>. Добавить проверку на то, что это число
12. Отсортировать внешний и внутренний листы в List<Map<String, List<String>>>
13. Убрать заданное значение из листа в Map<String, List<String>>
14. Три потока должны безопасно работать с Map<Long, Man>. Где Man - объект, см. #7
15. Убрать дубликаты из List<List<String>>
16. Преобразовать лист в строку
17. Сгенерировать миллион данных в коллекцию. Найти оптимальные коллекции, чтобы:
получать элемент из середины, конца
удалять элемент из середны, конца
добавлять элемент 
18. Тоже самое, но для Map
19. Сделать коллекцию из результатов пересечения двух множеств
20. Создать множество с числами. Суммировать соседние числа попарно, пока не останется одно число
21. Задать два стека, поменять информацию местами
22. На плоскости задано N отрезков. Найти точку пересечения двух отрезков, имеющую минимальную абсциссу. Использовать класс TreeMap